//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MintDParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMintDParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MintDParserBaseListener : IMintDParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveType([NotNull] MintDParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveType([NotNull] MintDParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] MintDParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] MintDParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] MintDParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] MintDParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] MintDParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] MintDParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] MintDParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] MintDParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] MintDParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] MintDParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] MintDParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] MintDParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.functionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionSpecifier([NotNull] MintDParser.FunctionSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.functionSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionSpecifier([NotNull] MintDParser.FunctionSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] MintDParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] MintDParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] MintDParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] MintDParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] MintDParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] MintDParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] MintDParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] MintDParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedStatement([NotNull] MintDParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.embeddedStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedStatement([NotNull] MintDParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.declarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationStatement([NotNull] MintDParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.declarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationStatement([NotNull] MintDParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.nullStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullStatement([NotNull] MintDParser.NullStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.nullStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullStatement([NotNull] MintDParser.NullStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] MintDParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] MintDParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectionStatement([NotNull] MintDParser.SelectionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.selectionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectionStatement([NotNull] MintDParser.SelectionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] MintDParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] MintDParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseStatement([NotNull] MintDParser.ElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseStatement([NotNull] MintDParser.ElseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] MintDParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] MintDParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.switchCases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCases([NotNull] MintDParser.SwitchCasesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.switchCases"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCases([NotNull] MintDParser.SwitchCasesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStatement([NotNull] MintDParser.CaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStatement([NotNull] MintDParser.CaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.caseLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseLabel([NotNull] MintDParser.CaseLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.caseLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseLabel([NotNull] MintDParser.CaseLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterationStatement([NotNull] MintDParser.IterationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.iterationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterationStatement([NotNull] MintDParser.IterationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] MintDParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] MintDParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] MintDParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] MintDParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.forInitExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInitExp([NotNull] MintDParser.ForInitExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.forInitExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInitExp([NotNull] MintDParser.ForInitExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.forCondExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForCondExp([NotNull] MintDParser.ForCondExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.forCondExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForCondExp([NotNull] MintDParser.ForCondExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.forLoopExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForLoopExp([NotNull] MintDParser.ForLoopExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.forLoopExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForLoopExp([NotNull] MintDParser.ForLoopExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.jumpStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJumpStatement([NotNull] MintDParser.JumpStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.jumpStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJumpStatement([NotNull] MintDParser.JumpStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] MintDParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] MintDParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.local_variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_declaration([NotNull] MintDParser.Local_variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.local_variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_declaration([NotNull] MintDParser.Local_variable_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarator([NotNull] MintDParser.Variable_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarator([NotNull] MintDParser.Variable_declaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] MintDParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] MintDParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_operator([NotNull] MintDParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_operator([NotNull] MintDParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.assignmentExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExp([NotNull] MintDParser.AssignmentExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.assignmentExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExp([NotNull] MintDParser.AssignmentExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.nonAssignmentExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonAssignmentExp([NotNull] MintDParser.NonAssignmentExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.nonAssignmentExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonAssignmentExp([NotNull] MintDParser.NonAssignmentExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.conditionalOrExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalOrExp([NotNull] MintDParser.ConditionalOrExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.conditionalOrExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalOrExp([NotNull] MintDParser.ConditionalOrExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.conditionalAndExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalAndExp([NotNull] MintDParser.ConditionalAndExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.conditionalAndExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalAndExp([NotNull] MintDParser.ConditionalAndExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.equalityExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExp([NotNull] MintDParser.EqualityExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.equalityExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExp([NotNull] MintDParser.EqualityExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.relationalExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExp([NotNull] MintDParser.RelationalExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.relationalExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExp([NotNull] MintDParser.RelationalExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.additiveExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExp([NotNull] MintDParser.AdditiveExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.additiveExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExp([NotNull] MintDParser.AdditiveExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.multiplicativeExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExp([NotNull] MintDParser.MultiplicativeExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.multiplicativeExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExp([NotNull] MintDParser.MultiplicativeExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.unaryExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExp([NotNull] MintDParser.UnaryExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.unaryExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExp([NotNull] MintDParser.UnaryExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.typeCast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeCast([NotNull] MintDParser.TypeCastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.typeCast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeCast([NotNull] MintDParser.TypeCastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOperator([NotNull] MintDParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOperator([NotNull] MintDParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.preIncDecExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreIncDecExp([NotNull] MintDParser.PreIncDecExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.preIncDecExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreIncDecExp([NotNull] MintDParser.PreIncDecExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.postfixExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixExp([NotNull] MintDParser.PostfixExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.postfixExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixExp([NotNull] MintDParser.PostfixExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.postfix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfix([NotNull] MintDParser.PostfixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.postfix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfix([NotNull] MintDParser.PostfixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.methodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodInvocation([NotNull] MintDParser.MethodInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.methodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodInvocation([NotNull] MintDParser.MethodInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.methodExtern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodExtern([NotNull] MintDParser.MethodExternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.methodExtern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodExtern([NotNull] MintDParser.MethodExternContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] MintDParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] MintDParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccess([NotNull] MintDParser.MemberAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.memberAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccess([NotNull] MintDParser.MemberAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.primaryExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExp([NotNull] MintDParser.PrimaryExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.primaryExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExp([NotNull] MintDParser.PrimaryExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.parenthExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthExp([NotNull] MintDParser.ParenthExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.parenthExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthExp([NotNull] MintDParser.ParenthExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.localizeExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalizeExp([NotNull] MintDParser.LocalizeExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.localizeExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalizeExp([NotNull] MintDParser.LocalizeExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.localizeParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalizeParams([NotNull] MintDParser.LocalizeParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.localizeParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalizeParams([NotNull] MintDParser.LocalizeParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MintDParser.localizeParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalizeParam([NotNull] MintDParser.LocalizeParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MintDParser.localizeParam"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalizeParam([NotNull] MintDParser.LocalizeParamContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
