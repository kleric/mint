//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MintDParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MintDParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IMintDParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] MintDParser.PrimitiveTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MintDParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] MintDParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] MintDParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] MintDParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MintDParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MintDParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.functionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionSpecifier([NotNull] MintDParser.FunctionSpecifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] MintDParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] MintDParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] MintDParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MintDParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.embeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmbeddedStatement([NotNull] MintDParser.EmbeddedStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationStatement([NotNull] MintDParser.DeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.nullStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullStatement([NotNull] MintDParser.NullStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] MintDParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectionStatement([NotNull] MintDParser.SelectionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MintDParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseStatement([NotNull] MintDParser.ElseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] MintDParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.switchCases"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCases([NotNull] MintDParser.SwitchCasesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseStatement([NotNull] MintDParser.CaseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.caseLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseLabel([NotNull] MintDParser.CaseLabelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIterationStatement([NotNull] MintDParser.IterationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MintDParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] MintDParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.forInitExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInitExp([NotNull] MintDParser.ForInitExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.forCondExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondExp([NotNull] MintDParser.ForCondExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.forLoopExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForLoopExp([NotNull] MintDParser.ForLoopExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpStatement([NotNull] MintDParser.JumpStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] MintDParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.local_variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocal_variable_declaration([NotNull] MintDParser.Local_variable_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.variable_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_declarator([NotNull] MintDParser.Variable_declaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] MintDParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment_operator([NotNull] MintDParser.Assignment_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.assignmentExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExp([NotNull] MintDParser.AssignmentExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.nonAssignmentExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNonAssignmentExp([NotNull] MintDParser.NonAssignmentExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.conditionalOrExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalOrExp([NotNull] MintDParser.ConditionalOrExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.conditionalAndExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalAndExp([NotNull] MintDParser.ConditionalAndExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.equalityExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExp([NotNull] MintDParser.EqualityExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.relationalExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExp([NotNull] MintDParser.RelationalExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.additiveExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExp([NotNull] MintDParser.AdditiveExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.multiplicativeExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExp([NotNull] MintDParser.MultiplicativeExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.unaryExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExp([NotNull] MintDParser.UnaryExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.typeCast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeCast([NotNull] MintDParser.TypeCastContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryOperator([NotNull] MintDParser.UnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.preIncDecExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreIncDecExp([NotNull] MintDParser.PreIncDecExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.postfixExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixExp([NotNull] MintDParser.PostfixExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.postfix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfix([NotNull] MintDParser.PostfixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.methodInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodInvocation([NotNull] MintDParser.MethodInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.methodExtern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodExtern([NotNull] MintDParser.MethodExternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgList([NotNull] MintDParser.ArgListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccess([NotNull] MintDParser.MemberAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.primaryExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExp([NotNull] MintDParser.PrimaryExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.parenthExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthExp([NotNull] MintDParser.ParenthExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.localizeExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalizeExp([NotNull] MintDParser.LocalizeExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.localizeParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalizeParams([NotNull] MintDParser.LocalizeParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MintDParser.localizeParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalizeParam([NotNull] MintDParser.LocalizeParamContext context);
}
